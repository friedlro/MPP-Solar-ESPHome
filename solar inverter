esphome:
  name: solar-inverter
  friendly_name: solar-inverter

esp8266:
  board: esp01_1m

# Enable logging
logger:
  baud_rate: 0
  esp8266_store_log_strings_in_flash: false

# Enable Home Assistant API
api:
  encryption:
    key: ""is generated from ESPHOME"
ota:
  password: "is generated from ESPHOME"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
   ssid: !secret wifi_ssid
   password: !secret wifi_password
mqtt:
  broker: 192.168.0.0
  port: 1883
  #username: "username"
  #password: "password
  id: solar

captive_portal:
 # Example configuration entry
uart:
  - id: uart_0
    tx_pin: GPIO1
    rx_pin: GPIO3
    # most devices use 2400 as baud_rate
    baud_rate: 2400

pipsolar:
  - uart_id: uart_0
    id: inverter0

sensor:
  - platform: pipsolar
    pipsolar_id: inverter0

    ac_output_apparent_power:
      id: inverter0_ac_output_apparent_power
      name: AC-Ausgangsscheinleistung

    ac_output_active_power:
      id: inverter0_ac_output_active_power
      name: AC-Ausgangswirkleistung
      filters:
       - multiply: 0.001
      unit_of_measurement: kWh
      device_class: energy
      state_class: total_increasing
      accuracy_decimals: 3

    pv_input_current_for_battery:
      id: pv_input_current_for_battery
      name: PV-Eingangsstrom

    pv_charging_power:
      id: pv_chargingpower
      name: PV-Ladeleistung 
      filters:
       - multiply: 0.001
      unit_of_measurement: kWh
      device_class: energy
      state_class: total_increasing
      accuracy_decimals: 3   

    output_load_percent:
      id: output_power_load_percent
      name: Ausgabebelastung

    battery_capacity_percent:
       id: battery_capacity_percent
       name: Batteriekapazität

########################## Power consumption via mains power #############################
  - platform: template
    name: "Output Power Netz"  
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3
    lambda: |-
      if (id(inverter0_device_mode).state.compare("L") == 0) {
        return id(inverter0_ac_output_active_power).state;
      } else {
        return 0;
      }
    update_interval: 1s
#######################################################################################

########################## Power consumption via PV #####################################
  - platform: template
    name: "Output Power PV" 
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3 
    lambda: |-
      if (id(inverter0_device_mode).state.compare("B") == 0) {
        return id(inverter0_ac_output_active_power).state;
      } else {
        return 0;
      }
    update_interval: 1s
#######################################################################################

binary_sensor:

  - platform: pipsolar
    pipsolar_id: inverter0

    fault_inverter_fault:
       id: fault_inverter_fault
       name: Fehler Wechselrichters

    warning_over_load:
       id: warning_over_load
       name: Überlastung

text_sensor:

  - platform: pipsolar
    pipsolar_id: inverter0
    device_mode:
      id: inverter0_device_mode
      name: Invertermodus
    last_qpigs:
      id: inverter0_last_qpigs
      name: inverter0_last_qpigs

output:
  - platform: pipsolar
    pipsolar_id: inverter0
    battery_recharge_voltage:
      id: inverter0_battery_recharge_voltage_out
    
switch:
  - platform: restart
    name: "PV Restart"    
